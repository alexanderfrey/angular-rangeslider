{"name":"AngularJS RangeSlider","tagline":"Simple directive that creates a range slider for Angular, styled to match Bootstrap-styled form elements","body":"angular-rangeslider\r\n===================\r\n_Current version: 0.0.7_\r\n\r\nAngular RangeSlider is a directive that creates an interactive slider that allows a user to change model values.\r\n\r\nIt has been styled to match form elements styled by [Twitter's Bootstrap CSS framework](http://twitter.github.io/bootstrap/).\r\n\r\n#### Requirements\r\n\r\n- Angular (v1.1.4+)\r\n- jQuery (v1.7+)\r\n\r\nQuick example\r\n-------------\r\n\r\nA basic slider with a range of 0 to 100:\r\n\r\n    <div range-slider min=\"0\" max=\"100\" model-min=\"min\" model-max=\"max\"></div>\r\n\r\nAs the handles are moved the model values `min` and `max` will be updated in the parent controller.\r\n\r\n![Default example](screenshots/slider.png)\r\n\r\nOptions\r\n-------\r\n\r\nOptions are set as attributes on the `<div range-slider>`\r\n\r\n### `=` two-way bindings\r\n\r\n`min` - the minimum value the user can select (must be a number, can be a model property)\r\n\r\n`max` - the maximum value the user can select (must be a number, can be a model property)\r\n\r\n`model-min` - the model property for the min value, represents the position of the min handle\r\n\r\n`model-max` - the model property for the max value, represents the position of the max handle\r\n\r\n`disabled` - model property or boolean, disables the slider when `true`\r\n\r\n### `@` attributes\r\n\r\n`orientation` - slider orientation, default: 'horizontal' - options: 'horizontal' | 'vertical' | 'vertical left' | 'vertical right'\r\n\r\n`step` - amount to change the value by when moving a handle, default: 0\r\n\r\n`decimal-places` - the number of decimal places to round to, default: 0\r\n\r\n`filter` - a built-in filter to apply to the displayed values, for example `currency`\r\n\r\n`filter-options` - options to pass to the filter\r\n\r\n`pin-handle` - disable/hide one handle, default: null - options: 'min' | 'max'\r\n\r\n`prevent-equal-min-max` - prevent the `min` and `max` values from being equal. The `step` value is used to set the minimum difference, otherwise a value of `1` is used.\r\n\r\nSome more examples\r\n------------------\r\n\r\n### Using model properties\r\n\r\nThe following properties are present in the scope:\r\n\r\n    // set available range\r\n    $scope.minPrice = 100;\r\n    $scope.maxPrice = 999;\r\n    \r\n    // default the user's values to the available range\r\n    $scope.userMinPrice = $scope.minPrice;\r\n    $scope.userMaxPrice = $scope.maxPrice;\r\n    \r\nSo we can include the directive in the HTML like this:\r\n\r\n    <div range-slider min=\"minPrice\" max=\"maxPrice\" model-min=\"userMinPrice\" model-max=\"userMaxPrice\" step=\"5\"></div>\r\n\r\nAs the user moves the min and max handles the `userMinPrice` and `userMaxPrice` will be updated in increments of `5` in real-time in the model.\r\n\r\n### Using filters\r\n\r\nContinuing from the example above we can format the values displayed to the user as currency.\r\n\r\n    <div range-slider min=\"minPrice\" max=\"maxPrice\" model-min=\"userMinPrice\" model-max=\"userMaxPrice\" step=\"5\" filter=\"currency\"></div>\r\n\r\nThis will automatically be localised by Angular, but we can force it to be USD by passing this as an option:\r\n\r\n    <div range-slider min=\"minPrice\" max=\"maxPrice\" model-min=\"userMinPrice\" model-max=\"userMaxPrice\" step=\"5\" filter=\"currency\" filter-options=\"USD$\"></div>\r\n\r\n![Currency example](screenshots/currency.png)\r\n\r\n### Making the slider vertical\r\n\r\nSimply add one of the following values to the `orientation` attribute: 'vertical', 'vertical left' or 'vertical right'.\r\n\r\nThis will create a vertical slider that is centred in it's parent element:\r\n\r\n    <div range-slider min=\"0\" max=\"100\" model-min=\"min\" model-max=\"max\" orientation=\"vertical\"></div>\r\n\r\n![Vertical example](screenshots/vertical.png)\r\n\r\nTo left-align the slider use 'vertical left':\r\n\r\n    <div range-slider min=\"0\" max=\"100\" model-min=\"min\" model-max=\"max\" orientation=\"vertical left\"></div>\r\n    \r\nAnd to right-align the slider use 'vertical right':\r\n\r\n    <div range-slider min=\"0\" max=\"100\" model-min=\"min\" model-max=\"max\" orientation=\"vertical right\"></div>\r\n\r\n### Disabling the slider\r\n\r\nIf you have a boolean property in your scope you can simply change this value to `true` to disable the slider:\r\n\r\n    $scope.sliderDisabled = false;\r\n\r\nAnd then specify the property using the disabled attribute:\r\n\r\n    <div range-slider min=\"0\" max=\"100\" model-min=\"min\" model-max=\"max\" disabled=\"sliderDisabled\"></div>\r\n    \r\n    // clicking this button will toggle the sliderDisabled value between true and false\r\n    <button ng-click=\"sliderDisabled=!sliderDisabled\">Toggle slider disabled status</button>\r\n    \r\n![Disabled example](screenshots/disabled.png)\r\n\r\n### Pinning a handle\r\n\r\nIf you would like only allow setting one value, effectively creating a single-value silder, set the pin-handle attribute to 'min' or 'max'. You may then omit the corresponding model-xxx property:\r\n\r\n    <div range-slider min=\"0\" max=\"100\" model-max=\"max\" pin-handle=\"min></div>\r\n    \r\n![Pinned example](screenshots/pinned.png)\r\n\r\nTo Do\r\n-----\r\n\r\n- Remove full jQuery dependency\r\n- Make it work in older Angular versions\r\n- Add option to move values with handles\r\n- Improve behaviour when model values are not valid (e.g. min is greater than max)\r\n\r\n\r\nKnown Issues\r\n------------\r\n\r\n - The slider restricts the model value when editing outside the slider (e.g. in an <input>) but the only notification is made to the `console`\r\n - The min slider handle disappears behind the max slider handle\r\n\r\n\r\nCredits\r\n-------\r\n\r\nThis was originally forked from [LÃ©on Gersen's](http://refreshless.com/) brilliant noUiSlider:\r\n\r\nhttps://github.com/leongersen/noUiSlider\r\n\r\nLicence\r\n-------\r\n\r\nThis code is released under the [MIT Licence](http://opensource.org/licenses/MIT)\r\n\r\nCopyright (c) 2013 Daniel Crisp\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.\r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}